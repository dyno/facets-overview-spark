plugins {
    id 'java'
    id 'scala'
    id 'maven-publish'
    id "com.adtran.scala-multiversion-plugin" version "1.0.35"
    id "com.github.maiflai.scalatest" version "0.25"
    id "com.google.protobuf" version "0.8.11"
}

repositories {
    mavenLocal()
    maven {
        url = 'https://repo.maven.apache.org/maven2'
    }
}

ext {
  scalapbVersion = '0.9.6'
  sparkVersion = '2.4.5'
}

dependencies {
    compile 'com.typesafe:config:1.4.0'
    compile "org.apache.spark:spark-core_%%:${sparkVersion}"
    // compile "org.apache.spark:spark-hive_%%:${sparkVersion}"
    compile "org.apache.spark:spark-sql_%%:${sparkVersion}"
    compile "com.thesamet.scalapb:scalapb-runtime_%%:${scalapbVersion}"
    compile 'org.tensorflow:spark-tensorflow-connector_%%:1.15.0'
    compile 'org.tensorflow:tensorflow:1.8.0'

    testCompile 'com.thesamet.scalapb:scalapb-json4s_%%:0.10.0', { exclude group: 'com.fasterxml.jackson.core' }
    testCompile 'org.scalatest:scalatest_%%:3.1.1'
    testRuntime 'org.pegdown:pegdown:1.6.0'
    // https://github.com/scalatest/scalatest/issues/1736, Document flexmark dependency for test reports
    testRuntimeOnly 'com.vladsch.flexmark:flexmark-all:0.35.10'
}

protobuf {
  protoc {
    artifact = 'com.google.protobuf:protoc:3.11.4'
  }

  plugins {
    scalapb {
      artifact = (org.gradle.nativeplatform.platform.internal.DefaultNativePlatform.getCurrentOperatingSystem().isWindows()) ?
          "com.thesamet.scalapb:protoc-gen-scala:${scalapbVersion}:windows@bat" :
          "com.thesamet.scalapb:protoc-gen-scala:${scalapbVersion}:unix@sh"
    }
  }

  generateProtoTasks {
    all().each { task ->
      task.builtins {
        remove java
      }
      task.plugins {
        scalapb {
        }
      }
    }
  }
}

// Add generated Scala code as a source directory
sourceSets {
  main {
    proto {
      srcDir 'facets/facets_overview/proto'
    }
    scala {
        srcDirs "${protobuf.generatedFilesBaseDir}/main/scalapb"
    }
  }
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}
